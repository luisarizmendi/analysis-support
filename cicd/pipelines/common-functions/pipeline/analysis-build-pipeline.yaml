apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: analysis-build-pipeline
spec:
  params:
    - default: analysis-test
      description: Namespace where to deploy the new build
      name: PROJECT_DEV
      type: string
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: dev
      name: registry-image-tag-name
      type: string
    - default: https://github.com/luisarizmendi/analysis-core
      description: Git repository
      name: git-repository
      type: string
    - default: analysis-core
      description: Application name
      name: app-name
      type: string
    - default: "Pull-request from Tekton pipelines"
      description: A title for the build
      name: title
      type: string
#    - default: webhook-secret
#      description: webhook secret name
#      name: webhook-secret
#      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.git-repository)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.IMAGE_TAG)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace


    - name: maven
      params:
        - name: CONTEXT_DIR
          value: .
        - name: MAVEN_MIRROR_URL
          value: "http://nexus:8081/nexus/content/groups/public"
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: maven-local-repo
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
        - name: maven-local-repo
          workspace: maven-local-repo


    - name: release-app
      taskRef:
        kind: Task
        name: maven-local-repo
      runAfter:
        - maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
        - name: maven-local-repo
          workspace: maven-local-repo
      params:
      - name: GOALS
        value:
        - deploy
        - -DskipTests=true
        - -DaltDeploymentRepository=nexus::default::http://admin:admin123@nexus:8081/repository/maven-snapshots/
        - -DaltSnapshotDeploymentRepository=nexus::default::http://admin:admin123@nexus:8081/repository/maven-snapshots/

    - name: code-analysis
      params:
        - name: SONAR_HOST_URL
          value: http://sonarqube:9000
        - name: SONAR_PROJECT_KEY
          value: $(params.app-name)
      workspaces:
        - name: source-dir
          workspace: shared-workspace
      runAfter:
        - maven
      taskRef:
        kind: Task
        name: sonarqube-scanner






    - name: build-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/analysis-cicd/$(params.app-name):$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - release-app
        - code-analysis
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace






    - name: tag-test-image
      params:
        - name: ARGS
          value:
            - tag
            - '$(params.app-name):$(params.IMAGE_TAG)'
            - '$(params.app-name):latest'
      runAfter:
        - build-image
      taskRef:
        kind: ClusterTask
        name: openshift-client


    - name: deploy-to-test-env
      params:
        - name: ARGS
          value:
            - patch
            - deployment/$(params.app-name)
            - --patch={"spec":{"template":{"spec":{"containers":[{"name":"$(params.app-name)","image":"image-registry.openshift-image-registry.svc:5000/analysis-cicd/$(params.app-name):$(params.IMAGE_TAG)"}]}}}}
            - '-n'
            - $(params.PROJECT_DEV)
      runAfter:
        - tag-test-image
      taskRef:
        kind: ClusterTask
        name: openshift-client



    - name: int-test
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - deploy-to-test-env
      params:
      - name: SCRIPT
        value: |
            sleep $(($RANDOM % 40 + 20))

    - name: perf-test
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - deploy-to-test-env
      params:
      - name: SCRIPT
        value: |
            sleep $(($RANDOM % 40 + 20))



    - name: pull-request
      taskRef:
        name: pull-request-gitea
        kind: Task
      runAfter:
        - perf-test
        - int-test
      params:
        - name: gitea-repo
          value: $(params.git-repository)
        - name: title
          value: $(params.title)


#    - name: send-to-webhook-slack
#      params:
#        - name: webhook-secret
#          value: $(params.webhook-secret)
#        - name: message
#          value: >-
#            Pipeline image build waiting to be reviewed 
#      runAfter:
#        - pull-request
#      taskRef:
#        kind: Task
#        name: send-to-webhook-slack


    - name: send-to-webhook-slack
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - pull-request
      params:
      - name: SCRIPT
        value: |
            sleep $(($RANDOM % 40 + 20))

  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: maven-local-repo




