apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: promote-analysis-gateway
  labels:
    app: analysis-gateway
spec:
  params:
    - default: analysis-test
      description: Namespace for deploy dev tests
      name: PROJECT_DEV
      type: string
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/luisarizmendi/analysis-gateway
      name: registry-repository
      type: string
    - default: latest
      name: registry-image-tag-name
      type: string
    - default: webhook-secret
      description: webhook secret name
      name: webhook-secret
      type: string
  tasks:

#    - name: push-image-to-registry
#      params:
#        - name: registry-repository
#          value: $(params.registry-repository)
#        - name: registry-image-tag-name
#          value: $(params.registry-image-tag-name)
#      resources:
#        inputs:
#          - name: image
#            resource: image
#      taskRef:
#        kind: Task
#        name: push-analysis-gateway-image-to-registry


    - name: push-image-to-registry
      taskRef:
        name: openshift-client
        kind: ClusterTask
      params:
      - name: SCRIPT
        value: |
            sleep $(($RANDOM % 40 + 20))




    - name: push-to-prod-env
      params:
        - name: ARGS
          value:
            - patch
            - deployment/analysis-gateway
            - --patch={"spec":{"template":{"spec":{"containers":[{"name":"analysis-gateway","image":"image-registry.openshift-image-registry.svc:5000/analysis/analysis-gateway:$(params.IMAGE_TAG)"}]}}}}
            - '-n'
            - $(params.PROJECT_DEV)
      runAfter:
        - push-image-to-registry
      taskRef:
        kind: ClusterTask
        name: openshift-client







#    - name: send-to-webhook-slack
#      params:
#        - name: webhook-secret
#          value: $(params.webhook-secret)
#        - name: message
#          value: >-
#            Pipeline image build waiting to be reviewed 
#            $(params.registry-repository):$(params.registry-image-tag-name)
#      runAfter:
#        - pull-request
#        - push-image-to-registry
#      taskRef:
#        kind: Task
#        name: send-to-webhook-slack

    - name: send-to-webhook-slack
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - push-to-prod-env
      params:
      - name: SCRIPT
        value: |
            sleep $(($RANDOM % 40 + 20))



  workspaces:
    - name: shared-workspace





