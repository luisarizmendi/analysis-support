apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: build-analysis-gateway
  labels:
    app: analysis-gateway
spec:
  params:
    - default: analysis-test
      description: Namespace for deploy dev tests
      name: PROJECT_DEV
      type: string
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/luisarizmendi/analysis-gateway
      name: registry-repository
      type: string
    - default: latest
      name: registry-image-tag-name
      type: string
    - default: webhook-secret
      description: webhook secret name
      name: webhook-secret
      type: string
  resources:
    - name: app-git
      type: git
    - name: image
      type: image
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/luisarizmendi/analysis-gateway'
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: Task
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
        - name: maven-local-repo
          workspace: maven-local-repo
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/analysis-cicd/analysis-gateway:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: ARGS
          value:
            - tag
            - 'analysis-gateway:$(params.IMAGE_TAG)'
            - 'analysis-gateway:latest'
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-to-test-env
      params:
        - name: ARGS
          value:
            - patch
            - deployment/analysis-gateway
            - --patch={"spec":{"template":{"spec":{"containers":[{"name":"analysis-gateway","image":"image-registry.openshift-image-registry.svc:5000/analysis-cicd/analysis-gateway:$(params.IMAGE_TAG)"}]}}}}
            - '-n'
            - $(params.PROJECT_DEV)
      runAfter:
        - tag-test-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: send-to-webhook-slack
      params:
        - name: webhook-secret
          value: $(params.webhook-secret)
        - name: message
          value: >-
            Pipeline image build waiting to be reviewed 
            $(params.registry-repository):$(params.registry-image-tag-name)
      runAfter:
        - push-to-test-env
      taskRef:
        kind: Task
        name: send-to-webhook-slack
    - name: push-analysis-gateway-image-to-registry
      params:
        - name: registry-repository
          value: $(params.registry-repository)
        - name: registry-image-tag-name
          value: $(params.registry-image-tag-name)
      resources:
        inputs:
          - name: image
            resource: image
      runAfter:
        - send-to-webhook-slack
      taskRef:
        kind: Task
        name: push-analysis-gateway-image-to-registry

  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: maven-local-repo




